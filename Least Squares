% Part III: Least Squares - Estimating parameters k, I(0), and beta
clc; clear all;

% Parameters and initial conditions
beta = 0.3;
gamma = 0.1;
S_0 = 990;
I_0 = 10;
R_0 = 0;
N = S_0 + I_0 + R_0;
y0 = [S_0; I_0; R_0];
h = 1;
T = 30;
time = 0:h:T;

sir_model = @(t, y, b, g, N) [
    -(b / N) * y(1) * y(2);
    (b / N) * y(1) * y(2) - g * y(2);
    g * y(2)];

% Solve the full non-linear SIR model using RK4
results = zeros(3, length(time));
results(:, 1) = y0;

for i = 1:length(time) - 1
    t = time(i);
    y = results(:, i);
    k1 = sir_model(t, y, beta, gamma, N);
    k2 = sir_model(t + h / 2, y + h * k1 / 2, beta, gamma, N);
    k3 = sir_model(t + h / 2, y + h * k2 / 2, beta, gamma, N);
    k4 = sir_model(t + h, y + h * k3, beta, gamma, N);
    results(:, i + 1) = y + (h / 6) * (k1 + 2 * k2 + 2 * k3 + k4);
end

% Extract the "true" infected data I(t)
I_true = results(2, :);
t_fit = time;
ln_I = log(I_true);

% Fit using linear least squares
A = [ones(length(t_fit), 1), t_fit'];
b = ln_I';
x = A \ b;
ln_I0_est = x(1);
k_est = x(2);

% Calculate I(0) and beta
I0_est = exp(ln_I0_est);
beta_est = (k_est + gamma) * N / S_0;
fprintf('Using 30 days of data:\n');
fprintf('Estimated I(0): %.2f (True: %.2f)\n', I0_est, I_0);
fprintf('Estimated beta: %.4f (True: %.4f)\n', beta_est, beta);

%10 days of data
t_fit_10 = time(1:10);
ln_I_10 = log(I_true(1:10));
A_10 = [ones(length(t_fit_10), 1), t_fit_10'];
b_10 = ln_I_10';
x_10 = A_10 \ b_10;
ln_I0_est_10 = x_10(1);
k_est_10 = x_10(2);

% I(0) and b for 10 days
I0_est_10 = exp(ln_I0_est_10);
beta_est_10 = (k_est_10 + gamma) * N / S_0;
fprintf('\nUsing 10 days of data:\n');
fprintf('Estimated I(0): %.2f (True: %.2f)\n', I0_est_10, I_0);
fprintf('Estimated beta: %.4f (True: %.4f)\n', beta_est_10, beta);

figure(1);
plot(t_fit, ln_I, 'ro-', 'LineWidth', 1.5, 'DisplayName', 'True ln(I(t))');
hold on;
plot(t_fit, A * x, 'b--', 'LineWidth', 1.5, 'DisplayName', 'Fit (30 days)');
plot(t_fit_10, A_10 * x_10, 'g--', 'LineWidth', 1.5, 'DisplayName', 'Fit (10 days)');
xlabel('Time (days)');
ylabel('ln(I(t))');
title('Least Squares Fit of ln(I(t))');
legend('Location', 'Best');
grid on;
