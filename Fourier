%MATLAB Code Fourier Transformations%
%------------------------------------------------------------------------------%
clc; clear all;

% Parameters and initial conditions
B0 = 0.3;
A = 5;
S0 = 990;
I0 = 10; 
R0 = 0;
N = S0 + I0 + R0;
y0 = [S0; I0; R0];
g = 0.1;

T = 30;         % Simulation time (days)
h = 0.1;              % Time step

% Time vector
time = 0:h:T;
num_steps = length(time);
    
% Allocate storage for results
results = zeros(3, num_steps);
results(:, 1) = y0;  % Initial conditions

% Define parameter set (w)
parameter = [
    2*pi*365/365;
    2*pi*100/365  
];

% Loop through parameter sets
for param_idx = 1:size(parameter, 1)
    w = parameter(param_idx, 1);

    % Function definitions for RK4 system of ODEs and Beta
    B = @(t) B0*(1+A*sin(w*t));
    sir_model = @(t, y, g, N) [
    -(B(t) / N) * y(1) * y(2);
    (B(t) / N) * y(1) * y(2) - g * y(2);
    g * y(2)];

    % RK4 Integration
    for i = 1:num_steps-1
        t = time(i);
        y = results(:, i);
        
        % RK4 steps
        k1 = sir_model(t, y, g, N);
        k2 = sir_model(t + h/2, y + h*k1/2, g, N);
        k3 = sir_model(t + h/2, y + h*k2/2, g, N);
        k4 = sir_model(t + h, y + h*k3, g, N);
    
        results(:, i+1) = y + (h/6) * (k1 + 2*k2 + 2*k3 + k4);
    end
        
    % Extract results
    S = results(1, :);
    I = results(2, :);
    R = results(3, :);
    
    % Plot results
    figure;
    plot(time, S, 'b', 'LineWidth', 2); hold on;
    plot(time, I, 'r', 'LineWidth', 2);
    plot(time, R, 'g', 'LineWidth', 2);
    title(sprintf('SIR Model (w = %.2f)', w));
    xlabel('Time (days)');
    ylabel('Population');
    legend('Susceptible', 'Infected', 'Recovered');
    grid on;
    hold off;
    
    % Create FFT of results
    Sfft = fft(S);
    Ifft = fft(I);
    Rfft = fft(R);
    
    % Define frequency range
    n = num_steps-1;
    f = (0:(n/2))/T;

    % Calculate spectrum
    spectrum=Ifft;
    P2 = abs(spectrum/n);
    P1 = P2(1:n/2+1);
    P1(2:end-1) = 2*P1(2:end-1);

    % Plot spectrum
    figure;
    plot(f,P1); hold on;
    title(sprintf('Spectrum for Infected Cases (w = %.2f)', w));
    xlabel('Frequency (f)');
    ylabel('Abs Val of Fourier Coefficients');
    grid on;
    hold off;
end
